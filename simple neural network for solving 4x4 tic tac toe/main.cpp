#include <iostream>
#include <cmath>
#include <iomanip>
#include <vector>
#include <random>
#define tests freopen("data.txt", "r", stdin);
#define streams freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
using namespace std;

double relu(double x)
{
    if (x < 0)
        return 0;
    else
        return x;
}

//////// Tests + accuracy ////////
int testData[48][80000];
int testTarget[80000];
int checkData[48][20000];
int checkTarget[20000];
///////////////////////////////////

void fillTests()
{
    tests;
    for (int i = 0; i < 80000; i++)
    {
        for (int j = 0; j < 48; j++)
            cin >> testData[j][i];
        cin >> testTarget[i];
    }
    
    for (int i = 0; i < 20000; i++)
    {
        for (int j = 0; j < 48; j++)
            cin >> checkData[j][i];
        cin >> checkTarget[i];
    }
}

class Network
{
private:
    ////////////// Layers ////////////
    vector<double> inputLay;
    vector<double> hiddenLay;
    vector<double> hiddenActivateLay;
    vector<double> outputLay;
    vector<double> softMaxLay;
    //////////////////////////////////
    
    ///////// Layers gradient /////////
    vector<double> gradientOnSoftmaxLay;
    vector<double> gradientOnOutputLay;
    vector<double> gradientOnActivateLay;
    vector<double> gradientOnHiddenLay;
    ///////////////////////////////////
    
    int SIZES[3] = { 48, 48, 16 };
    
    int target;
    
    int accuracy = 0;
    double loss = INFINITY;
    double bestLoss = INFINITY;
    
    double sum = 0.0;
    double sumOfWeights = 0.0;
    double alpha = 0.002;
    
    vector<vector<double>> weightsInput = {
        {-4.75824155e-01,  4.20305051e-01,  1.16473978e-01, 8.87410022e-02, -2.82384190e-01,  6.43455043e-01, -1.32463309e+00,  3.83649710e-01,  6.48018818e-02, -2.78382347e-01,  1.12473803e-01, -2.42798347e-01, 2.01934980e-01, -8.96244135e-01, -7.11814987e-01, 1.01949883e-01,  6.07140492e-01,  5.24941071e-02, 6.36275050e-01,  3.49020783e-01,  3.34474222e-01, 2.07577154e-01,  2.87890520e-01, -1.95302991e-01, -5.55333257e-01,  4.18273560e-01,  6.55888256e-01, 7.52805041e-01,  5.10129335e-01,  1.81556408e-01, 7.42773709e-01, -7.01832004e-01,  4.77965847e-01, 1.11221314e+00,  3.48993939e-01,  7.74492033e-02, -8.91204605e-01,  4.76467195e-01, -4.27577895e-01, 1.95451014e-01,  2.04471030e-01, -2.83379754e-01, -5.36131829e-01,  4.87692510e-01, -2.12128766e-01, 4.94303258e-01,  2.16228687e-01,  3.90585457e-01}, {-1.28663294e-01,  1.18076034e-01,  2.43671617e-01, 2.06485232e-01, -1.06265978e-01,  9.11130802e-02, -2.96550619e+00,  5.06891501e-01,  8.84732371e-02, 2.30980185e-01,  6.70390257e-02, -1.81133078e-01, -1.38369959e-01,  7.21265096e-01,  6.77377562e-01, 1.31646614e-02,  3.69441516e-01, -2.01032996e-03, -2.63343242e-01, -5.13770560e-02,  1.03724718e-01, 2.34765778e-01,  1.54729719e-01, -1.22966970e-01, 5.24995425e-02,  2.95710217e-01,  5.66517251e-01, 4.69835530e-01, -4.22608498e-01,  3.84712764e-02, -5.06768842e-01,  4.74876561e-01, -3.24002255e-01, 1.10342868e+00,  1.70509658e-01,  2.53475468e-02, -1.68373101e-01, -1.72276125e-01,  5.36011124e-01, 7.47790295e-02,  1.73652349e-01,  1.17187267e-01, 1.15259620e+00, -4.02763000e-01, -2.91765391e-01, 2.93791758e-01,  2.94735104e-02,  5.21023771e-04}, {7.94403882e-01, -2.90699211e-02, -5.61993164e-02, -5.46418883e-02,  5.53574266e-01, -2.26207550e-01, 1.96295730e+00, -6.34342200e-01,  2.26690190e-02, 5.36733633e-01, -2.01150252e-01,  5.05649591e-01, 8.70436044e-02,  8.72787094e-01,  6.05671685e-01, 2.93253137e-01, -5.00250601e-01, -1.29931809e-01, -1.40150996e-01,  2.11738895e-01, -2.18923133e-01, -4.23535646e-01, -3.62662335e-01,  3.52986466e-01, 6.29527355e-01, -2.22417674e-01, -1.05275014e+00, -8.96031770e-01,  8.60956164e-02,  1.65783565e-02, -2.44144290e-01,  8.86756136e-01,  2.01250157e-01, -1.98457816e+00, -2.52700242e-01,  5.35261919e-02, 1.12989051e+00,  8.57796583e-02,  2.80802556e-01, -6.25388405e-02, -2.75579978e-03,  4.92219819e-01, 1.27222587e-01,  2.47175462e-01,  4.58577015e-01, -1.82533344e-01, -1.67998526e-01, -9.68496912e-02}, {-3.24643052e-01, -5.91183853e-02,  2.02432490e-01, -7.73972631e-02,  3.42324675e-01, -4.74584645e-01, -1.18212589e+00,  4.39827425e-01,  5.84203662e-02, 3.09095222e-01,  1.91031115e-01,  2.46336767e-02, 1.99933158e-01, -3.91490055e-01,  4.92410556e-01, -9.22504697e-01, -3.22000128e-01,  7.98245671e-02, -4.38686042e-01,  5.78231816e-01,  1.73723053e-01, 1.07247484e-01, -2.01223075e-01,  1.69906857e-01, 9.19235479e-02,  5.75390552e-01, -2.30374008e-02, 9.82347923e-02, -2.61214642e-01, -3.77912469e-02, 1.45350445e-01,  1.03367903e-03,  3.49282038e-01, -3.84855868e-02, -5.24587429e-01,  1.14214510e-01, 1.54871352e-01,  2.91658422e-01,  5.41183325e-01, 4.38634122e-01,  5.46921827e-01,  2.97600641e-01, 5.66082448e-01,  1.76489685e-01,  2.19789645e-01, 5.44014911e-01, -1.44408079e-01,  8.09210428e-01}, {5.21022705e-01,  2.78472937e-01, -3.27408922e-01, 1.77509792e-01,  2.46842092e-01,  5.97903554e-01, -2.95157930e+00, -2.82896370e-01, -6.26809868e-02, -1.56384744e-01,  2.79298393e-01,  5.92796808e-02, -5.69544676e-02,  2.15667483e-01, -1.60616606e-01, 1.09510249e-01,  4.47684144e-01,  2.85284572e-02, 5.29776685e-01,  1.00735967e-01, -3.91773464e-02, 3.63016281e-01,  1.04642176e-01,  1.47787706e-01, 1.31943249e-01,  1.96163465e-01, -9.77096384e-02, 2.09533438e-01,  7.78165526e-02, -4.90358336e-02, -3.37661855e-01,  6.27882069e-01,  2.06694102e-01, -7.49201351e-02, -3.50670985e-01,  1.11335873e-01, 7.31215181e-02,  7.53638563e-02, -3.23638811e-01, 1.98789408e-01,  1.08935146e-01, -1.99909401e-01, 6.81672101e-02,  1.11303088e-01, -2.70485653e-01, 1.02303683e-01,  1.68527051e-01,  8.67062290e-02}, {3.14725194e-01,  1.67090752e-01,  5.07718345e-01, 6.84191605e-02, -4.46969857e-01,  4.67414397e-01, 2.00910834e+00, -6.74638198e-02,  2.50838771e-01, 4.75921746e-01, -5.27608517e-01, -4.07130488e-02, 1.38681774e-01,  5.84339400e-01,  1.01891756e-01, 1.03708748e+00,  4.88566876e-01, -7.28075427e-03, 2.91234375e-01, -2.41851455e-01,  5.68624072e-02, -6.80020368e-01,  3.29435928e-01, -1.66769146e-01, 1.42405374e-02, -3.20657693e-01,  3.95769104e-01, -2.82230484e-02,  3.79635374e-01,  2.92703030e-01, 3.42016841e-01, -5.21035131e-02, -3.64644334e-02, -5.81211917e-02,  1.05611000e+00,  6.25924446e-02, -1.69934685e-02,  8.42066810e-02,  1.28326739e-01, -7.36146003e-01, -4.08263150e-01,  3.76993413e-01, -4.04263756e-02,  2.31358189e-01,  1.64543992e-01, -2.28887344e-01,  7.18049867e-02, -5.42186688e-01}, {4.23013170e-01,  2.36771388e-01, -1.50321877e-01, 2.57947612e-01, -8.13154307e-02, -4.97724558e-01, -1.22536063e+00,  2.81994771e-01,  7.93271476e-02, 3.88943252e-01,  2.46275814e-01,  3.54527408e-02, -8.78184255e-02,  2.23888077e-01,  1.63760461e-01, 4.79978430e-01,  3.74086431e-01, -7.55520216e-01, 5.39611126e-01, -1.20887593e-01, -8.13271521e-02, 2.37375081e-01, -1.20284923e-01,  7.01077109e-02, 1.67068264e-01, -4.07887625e-01, -4.24023043e-02, 4.57349119e-02,  5.14966445e-01, -4.23904328e-02, 7.60064836e-01, -5.36068432e-01, -5.25841767e-01, -5.33685241e-02, -9.50167111e-02,  1.23499755e-01, 1.82827682e-01,  4.31560861e-01, -2.81153765e-01, 1.71156512e-01, -5.07993034e-01,  1.98870033e-01, 9.29675942e-01, -2.37699724e-01,  4.64549058e-01,4.37961332e-01, -1.25694083e-01, -3.20115490e-01}, {8.09335466e-02,  3.01179500e-01,  1.12972963e-01, -6.38366403e-02, -1.14090006e-01,  4.97440206e-01, -2.93920680e+00, -9.87939892e-02,  4.16551833e-01, 4.28006986e-01,  1.79033184e-01,  4.11836062e-02, 2.41708637e-01,  1.89354018e-01,  2.35678102e-01, -1.30887499e-02,  2.22912451e-01, -1.02855759e-01, -2.02641687e-01,  2.28646283e-01,  2.65452509e-01, 6.08863913e-02,  1.41442898e-01,  1.23928790e-01, 1.78991932e-01,  6.13566806e-01, -1.40209164e-01, 3.67300927e-01,  2.43816051e-01, -1.97009185e-02, -8.43439251e-02,  4.22027172e-01,  5.52706099e-01, -6.66574457e-02, -5.21653494e-02,  6.21571316e-02, 1.78617082e-01, -4.27798502e-01, -8.93940082e-02, 3.01641065e-01,  1.80102713e-01,  4.84007015e-01, -5.94066899e-01,  2.74235671e-01, -5.09469923e-01, -2.30848727e-02,  1.34829208e-01,  9.24934632e-02}, {-1.79580524e-01, -1.38821457e-01,  4.99388415e-01, -8.94148158e-02,  3.37485342e-01,  5.56601990e-01, 2.02411949e+00,  2.11141849e-02, -4.18910893e-02, -2.89481833e-01, -3.94891874e-01,  4.83438212e-02, 3.21337542e-02,  7.43163339e-02, -2.24218690e-02, -3.07962507e-01,  2.75680390e-02,  9.73170335e-01, -4.21692933e-05,  2.37704915e-01, -1.50053916e-01, -4.15566810e-01,  2.07378556e-01,  1.36661722e-03, -2.15257136e-01,  3.84829750e-01,  2.81022547e-01, -6.64606696e-02, -5.54696009e-01,  3.64483745e-01, -2.38876931e-01,  7.20284427e-01,  4.86934197e-01, 1.17098326e-01,  2.06204269e-01,  6.08449023e-02, 5.45714631e-02,  3.05544534e-01,  6.46168455e-01, -5.98697616e-01,  5.27776533e-01, -1.47309987e-01, 1.36990414e-02,  3.60318971e-01,  1.20451916e-01, 1.07794154e-01,  3.24815011e-02,  5.60451521e-01}, {-3.79635291e-01, -3.53129584e-01, -8.30850423e-01, 3.30906154e-01, -1.80833085e-01,  5.26957936e-01, -1.54267234e+00,  3.29606260e-02,  6.72114292e-01, -1.28202813e-01,  3.45554886e-01,  1.59202395e-01, 5.17160915e-01, -2.72351202e-02, -4.10536881e-01, 2.10888765e-01,  5.57598865e-02, -1.10951674e-01, -1.50300024e-01,  7.75071263e-01,  1.29100127e-01, 4.25301469e-01, -6.04125638e-02,  2.00558146e-01, 2.08995902e-01, -3.25180130e-01, -1.12903512e-01, -1.67164986e-01, -4.89349575e-01,  9.65901597e-01, 2.87214729e-01,  6.11193256e-01, -2.70566413e-01, 1.34333900e-01,  1.81264604e-01,  1.08453824e-01, -9.38328610e-03,  2.50580306e-02,  3.76599643e-01, 4.53107787e-01,  6.90940429e-01,  5.04627471e-01, 6.44837398e-01,  7.61322899e-01, -2.04565629e-02, -6.45735190e-01,  2.37505122e-01, -6.48004736e-01}, {2.77999043e-01,  3.32962702e-01,  3.40721809e-01, -2.36087846e-01,  1.11525364e-01, -7.98325602e-02, -3.02018512e+00,  1.04901610e-01,  1.64355183e-02, 6.85970375e-01,  1.77912934e-01,  2.31872225e-01, 2.75342878e-01,  2.99320538e-01,  7.44188445e-02, 1.37354248e-01,  1.56645365e-01, -1.03880157e-02, 2.04283109e-01, -5.03815366e-02, -4.01546546e-01, 3.07346801e-01, -1.71142338e-01,  2.08218009e-01, 1.82226095e-01, -4.25049564e-01,  5.12860840e-02, 2.63867855e-01,  3.41777921e-01,  9.50829061e-01, -1.10423085e-01, -4.12846532e-02,  2.13585863e-01, -5.74495580e-02,  8.26937192e-02,  1.30698750e-01, 8.47865675e-02,  2.67918186e-01,  3.50390513e-01, 9.20740261e-02, -1.57328063e-01, -2.36514626e-01, 1.89619961e-01,  8.07547913e-01, -3.32757285e-01, 1.85734210e-01, -1.16194146e-01,  1.08455472e+00}, {5.64895064e-01,  3.67732786e-01,  8.53084122e-01, -8.33199941e-02,  1.98011136e-01, -4.93056806e-02, 1.87226429e+00,  9.00186431e-02, -6.19821971e-01, 5.61048462e-02, -2.72429780e-01, -2.28985573e-01, -6.14783440e-01,  1.79041123e-01,  6.97426371e-01, 1.48261419e-01,  2.77669834e-01,  1.66367042e-01, 3.72097143e-01, -4.18819486e-01,  2.00200277e-01, -6.41256794e-01,  3.93820845e-01, -5.91153657e-01, -1.70404520e-01,  7.28077377e-01,  2.48279700e-01, 1.46636634e-01,  4.29336935e-01, -1.57233280e+00, 2.28050405e-01, -1.32223650e-01,  5.50874995e-01, 1.30963807e-02, -1.79195688e-01,  3.93196231e-02, 2.89473599e-01,  1.39263545e-01, -2.73935221e-01, -5.24980305e-01, -3.73253030e-01, -4.66599383e-02, -3.39428188e-01, -9.36514241e-01,  4.07407811e-01, 8.18152718e-01, -1.68405797e-01,  3.34880358e-01}, {4.49105834e-01,  8.59108771e-01,  3.35953205e-04, -8.06661167e-01, -2.37707774e-01, -1.15735300e-01, -3.78292678e-02,  4.63711339e-01,  1.30269275e-01, -3.97615287e-01, -3.53129366e-01,  1.29351614e+00, -2.42789581e-01,  4.03295900e-01,  3.26916161e-01, -1.23246796e-01,  3.48979871e-01,  4.04922562e-02, 3.47345753e-01,  1.00466938e-01,  1.57136738e-01, -3.05401076e-01, -2.37277157e-01, -3.79552797e-01, -4.20950214e-01, -2.98481900e-01, -3.29119234e-02, -8.76843174e-02,  3.55847195e-01, -6.30481492e-02, 3.24138358e-01,  7.28901673e-01, -2.65806704e-01, -4.21879042e-01,  2.20281527e-01,  5.18846459e-01, 1.55011327e-01, -3.38995070e-01,  4.96246654e-01, -3.84614209e-01,  5.34245395e-01,  3.99759161e-01, -7.46257732e-02,  6.26759789e-01,  1.71099090e-01, 2.33246341e-01, -9.40299993e-02,  3.07291436e-01}, {1.33670090e-01, -5.98696449e-01,  1.62947002e-01, 5.24010645e-01,  1.65971511e-01,  5.16924263e-01, -6.91018672e-02,  1.90575580e-01, -3.42638194e-02, 5.65203021e-01,  2.36251765e-02,  1.21941437e+00, 2.53436920e-01,  1.76316967e-01,  1.94859456e-02, 3.93546783e-01,  8.00715336e-02,  4.70966616e-02, 2.19706988e-01,  7.87101057e-02, -1.31584823e-01, -1.02111886e+00, -3.93592457e-02, -3.90674247e-01, -4.39129746e-01,  3.87573679e-01, -7.66544544e-02, 1.06953546e-01, -1.60148093e-01, -5.90943184e-02, 1.61478088e-01, -9.18023293e-02,  4.54326498e-01, -1.56094269e-01,  2.20164100e-01,  4.73798621e-01, 1.41251358e-01,  1.73921388e-01,  1.52902483e-01, 3.56911870e-01, -5.63211672e-03,  1.65059572e-01, 1.28012081e-01, -1.65050665e-01,  1.70906282e-01, 5.13266856e-02, -4.89745814e-01, -2.19850666e-01}, {-2.58284528e-02, -1.24341402e-01,  1.99798773e-01, 6.40129859e-01,  3.21851262e-01,  6.01173730e-02, -1.81331444e-01, -3.08497307e-01,  1.96665231e-01, 3.03041679e-01,  3.69573140e-01, -2.83499679e+00, 1.63522262e-01, -7.75858167e-02,  3.30165627e-02, 5.83158559e-02,  1.62751584e-01,  3.43225430e-02, -1.54898177e-01,  3.24857744e-01,  2.08327268e-01, 9.27093209e-01,  2.87318258e-01,  5.71415398e-01, 8.32341017e-01,  4.74468506e-01,  3.29840413e-01, 2.31134875e-01,  7.11200247e-02,  2.89754141e-01, 6.73528962e-02, -2.19820831e-01,  2.75953380e-01, 6.03838685e-01, -8.02369315e-02, -6.63891419e-01, -3.61562851e-02,  5.32868081e-01, -1.26808524e-01, 1.32616663e-01, -2.43786138e-01, -1.64967187e-01, 3.97436162e-01, -2.20841195e-02, -1.17704455e-01, 1.06507803e-01,  3.49311717e-01,  3.50393462e-01}, {6.15019316e-01, -2.89885320e-01,  3.58862344e-01, -4.91742416e-01,  2.31766397e-01,  5.98011661e-01, 5.40780392e-02, -3.86061820e-02,  5.15533740e-01, 4.37760680e-01,  9.46725986e-01,  8.82062539e-02, 2.74536631e-01,  8.45556846e-01,  6.45316835e-01, 6.89372956e-01, -5.13045512e-01,  6.55945717e-02, -4.45688652e-01, -1.90516124e-01, -5.85245419e-01, -2.92898210e-01,  4.56389026e-01,  5.74250076e-02, 2.90640016e-01, -4.01906928e-01,  7.17259382e-01, 4.35729472e-02,  2.30818314e-01, -9.45518247e-02, -1.14138706e-01,  4.14466294e-01,  2.67329194e-01, 2.70884416e-01, -7.48748795e-01, -9.15982759e-01, -9.06534852e-01,  3.54069323e-01,  6.33072339e-02, -7.80897418e-01,  1.08062143e-02,  5.80932416e-01, -3.52293274e-01,  3.68609927e-01,  3.67791247e-01, -3.99651838e-01,  8.22753488e-01, -1.39324510e-02}, {-1.33280094e-02,  5.47898689e-01, -1.64114760e-01, 1.02253258e-01, -1.19614503e-02,  5.65358845e-01, 1.17668250e-01, -1.06098884e-01, -1.04517455e-01, -1.10885583e-01,  9.58000320e-01,  1.04426186e-02, -1.15146031e-01,  5.21215384e-01, -3.09059827e-02, 3.47851426e-01,  5.49830104e-01, -1.03241866e-02, 3.19919937e-01, -1.63812954e-01, -3.78511774e-01, -9.17627578e-01,  3.25903300e-01,  2.74562303e-02, 2.93326649e-01, -1.97550297e-02,  6.05143027e-01, 5.29162835e-01, -3.86265258e-01, -1.98756575e-01, -4.52401088e-01,  5.11250346e-01, -2.38676828e-01, 3.21315435e-01, -6.10575531e-01, -7.41198141e-01, -3.46817249e-01,  3.45316936e-02,  1.06148690e-01, -4.66273248e-01,  5.70654762e-01, -1.00201896e-01, 1.05328863e+00, -9.13728486e-02,  2.39989044e-02, 2.10651479e-01,  8.29919351e-01, -3.04707307e-03}, {-2.30589794e-01,  1.87981033e-01,  1.87752064e-01, 4.80423020e-01, -8.07728115e-02, -4.03848687e-01, -3.86075043e-01,  2.43559733e-01, -3.01370461e-01, 1.12868669e-02, -1.83701642e+00,  1.50543768e-02, 8.97109080e-03, -6.18041364e-01, -2.59369007e-01, -6.56647770e-01,  4.99814025e-01,  5.62937910e-02, 5.14749461e-01,  5.90547705e-01,  9.24384587e-01, 7.89240577e-01, -5.98421539e-01, -1.18618094e-01, -3.31859586e-01,  6.00218020e-01, -1.14634605e+00, -1.89822315e-01,  1.55840949e-01,  2.34339007e-01, 7.29501821e-01, -2.74059663e-01,  2.99524277e-01, -3.46830638e-01,  1.30886989e+00,  1.71002748e+00, 1.31639315e+00, -7.84366901e-02,  2.78971562e-01, 9.11414358e-01, -5.73212350e-02, -2.05984569e-01, -1.95034664e-02,  1.37030237e-01, -1.46261040e-01, 6.33476224e-01, -1.32226924e+00,  3.45576337e-01}, {7.42851983e-01, -2.58671790e-01,  6.02957071e-01, -5.71824304e-01, -4.92074874e-01,  3.67534712e-01, 1.35411523e-01,  3.22838158e-01, -5.25078488e-01, -3.39503899e-01, -8.58375869e-01,  1.49830521e-02, 2.97595561e-01,  1.21880720e-01,  2.88220888e-01, 6.38188407e-02,  4.81625231e-01, -7.27751392e-01, 4.05560827e-01,  6.63203752e-01, -3.76122214e-02, -8.04041623e-01,  3.11873061e-01,  2.60590519e-01, 1.03567256e-01,  4.70406553e-01, -3.31814786e-01, 5.73732026e-01, -2.18829210e-01,  9.02318983e-01, -1.75338545e-01,  5.09967822e-01,  4.97343544e-01, 8.12015288e-02,  1.97852081e-01, -1.11710802e+00, 2.76108068e-01,  3.28194755e-01,  5.24484754e-01, 6.50665975e-01, -5.45633897e-01, -6.30911337e-01, -3.88853223e-02, -3.98989350e-01,  2.57272814e-01, 2.23616849e-01,  7.84849611e-02,  3.88076820e-01}, {8.63241019e-02,  2.91678362e-01,  7.82656555e-02, -2.80414866e-01, -2.47123745e-01, -6.12456844e-02, 1.57690115e-01, -3.18961445e-01,  1.81113629e-01, 8.68000366e-01, -5.82929352e-01, -1.69283209e-01, 1.83354893e-01,  1.74929204e-01, -1.20927372e-01, 3.16539975e-01,  2.60262939e-01, -4.09889416e-01, 1.79041815e-01,  2.60040513e-01, -2.44070490e-01, -1.24548397e+00, -2.19838972e-01,  1.62402680e-01, 1.53828867e-01,  3.13463967e-01, -2.25264291e-01, 6.53615242e-01,  2.02333254e-01,  9.99243149e-01, 1.38435640e-02, -1.45986576e-01,  1.79846295e-01, 3.44827192e-02,  7.21772888e-02, -9.41200329e-01, 1.17611324e-01, -2.59018699e-01, -2.17401094e-01, 6.89929033e-01,  1.78809985e-01,  4.48360953e-01, 2.48227676e-01,  7.24047871e-01, -3.85692052e-01, 4.90278639e-02,  1.68153219e-01, 7.63574069e-01}, {-4.15076792e-01,  2.81783906e-01, -4.24575166e-01, 6.92956475e-01,  6.38210772e-01,  9.25061193e-02, -3.99873363e-01,  6.71442195e-02,  7.03795384e-01, 1.30827652e-01,  1.28604715e+00,  2.73037038e-01, -2.55853218e-01, -2.96378961e-02,  3.03189913e-01, -1.80789178e-04, -3.33218216e-01,  9.24250796e-01, -3.48845869e-02, -4.04733260e-01,  5.09480777e-01, 1.06758814e+00, -1.33339091e-01, -3.10762116e-01, -1.09735604e-01, -2.43430020e-01,  3.94701177e-01, -8.56365227e-01,  2.78893321e-01, -1.57097443e+00, 5.95460688e-01,  1.00854852e-01, -5.35902232e-03, 7.47040674e-02, -1.88315164e-01,  1.49591436e+00, -2.27938368e-01,  2.39221685e-01,  7.76379342e-02, -9.52330588e-01,  6.82133126e-01,  6.98363575e-01, 3.62302538e-01,  3.06314135e-01,  2.69518081e-01, 2.59445004e-01, -4.87849236e-02, -5.35949968e-01}, {1.22431341e-01,  5.83842041e-01,  6.87667658e-01, 8.93241750e-01,  4.28011230e-01,  3.00078437e-01, 3.64365425e-02, -2.11034125e-01, -1.00132710e-01, 2.23051591e-01, -3.85405748e-01,  4.38007840e-02, -7.35409234e-01,  3.26966228e-01, -2.07057286e-01, 1.37229990e-01,  1.95215032e-01, -1.87416401e-02, -4.78552672e-01,  9.26516968e-02, -1.99567423e-01, -2.72026060e-01, -1.95366085e-01, -2.20564893e-02, 1.73359034e-01,  7.34975178e-01, -1.27491483e-01, 4.16305242e-01, -2.56305762e-01, -3.40349962e-01, 5.97170445e-01,  3.12935555e-01,  6.95654726e-01, 7.80750042e-02, -2.65807168e-01,  3.42958150e-01, -2.53157551e-02, -5.35102313e-01, -1.76199755e-02, -4.44869184e-01, -5.57771248e-01, -2.53419568e-01, 3.12342869e-01, 4.33759180e-01,  4.29765970e-01, 5.65952495e-01, -9.27951890e-02, -4.54096510e-01}, {6.57952766e-02,  3.54764857e-01,  2.32225942e-01, 6.02065198e-01,  2.17467808e-01,  4.82015157e-01, -1.28788933e-04,  1.98258933e-01, -1.59224782e-01, 5.08224340e-01, -1.84795068e-01,  6.45488591e-02, 3.77481545e-02,  1.36772727e-01,  2.70920910e-01, 1.30513839e-01,  2.65520011e-01,  3.26464389e-02, 6.49256804e-01, -2.73104609e-01,  6.17763881e-02,  -1.30968337e+00,  1.83669587e-01, -5.90011363e-02, 1.03970028e-01, -1.18613854e-01, -2.50813751e-01, 5.54427265e-02,  1.05355472e-02, -2.40583345e-01, -2.20394523e-01, -1.54352264e-01,  1.87264682e-01, 9.20907726e-02, -1.02952593e-01,  3.63952479e-01, 1.27536219e-01,  5.74730590e-01,  4.01841008e-01, 3.34135977e-01,  2.87039095e-01,  9.84164482e-02, -2.89900980e-01,  6.98974911e-02,  1.74429693e-01, 1.00135170e-01,  1.80686543e-01,  1.21214490e-01}, {2.46693222e-01, -4.59897411e-01, -4.70500575e-01, -1.19916812e+00, -4.82599403e-01, -1.39007101e-01, -2.31492689e-01,  3.00856642e-01,  3.77895743e-01, -1.04288617e-01,  5.18681875e-01, -4.19724446e-02, 8.21728734e-01,  5.15522954e-02,  3.69378344e-01, 1.04496398e-01,  7.17083067e-02,  1.10196893e-01, 4.13251475e-01,  5.13304051e-01,  4.49203682e-01, 1.04026403e+00,  2.87244525e-01,  1.29365096e-01, -1.52812177e-01, -2.86240355e-02,  2.88398408e-01, -1.90994310e-01,  4.31913127e-01,  6.21299475e-01, -5.43295504e-03,  1.74117373e-01, -3.45788499e-01, -1.30972930e-01,  4.96785797e-01, -4.81883138e-01, 2.28204130e-01,  4.47381113e-01,  1.76314673e-01, 2.52160872e-01,  6.01747395e-01,  4.96925457e-01, 4.56489656e-01,  2.40450902e-02, -4.10532563e-01, -2.23146572e-01, -1.63166170e-01,  6.26443749e-01}, {4.46509006e-01, -8.16772608e-02,  3.98637591e-01, 3.09391800e-01,  3.15638550e-01,  3.43171618e-01, -2.25629622e-02,  1.69569103e-01,  5.89220207e-01, 5.42839387e-01, -6.06699942e-02, -3.56260526e-01, 6.41827207e-01,  1.02811377e-02, -3.81032187e-01, 1.00681177e-01,  5.71792117e-01,  4.93573538e-02, -2.15073396e-01,  1.01625856e-01, -1.22666379e-02, 4.61623495e-03, -4.83395252e-01, -4.22374827e-01, 1.19756738e+00,  1.36596346e-02, -1.40138736e-01, -9.69452887e-02, -4.63592425e-02, -1.04588976e-01, -3.45637119e-01,  5.64648587e-01,  5.26645279e-02, -6.58677702e-01,  2.68477032e-01,  3.99405624e-02, 8.82343785e-02,  5.64389917e-01,  4.62357931e-01, -6.17444405e-02, -1.31112531e-01,  5.89417641e-01, 1.09037307e-01, -1.69634699e-01, -4.59673103e-01, 5.63776452e-01, -2.16718158e-02,  2.19016201e-01}, {1.45728102e-03, -3.57142516e-01, -6.45308902e-02, 6.89737770e-02,  2.57703774e-01,  2.53259802e-01, 3.95346965e-04,  1.95953749e-01, -2.64742129e-01, 2.72233630e-01, -6.13937478e-02, -4.48236572e-01, 1.53149848e-01,  3.47770471e-01,  4.66026209e-01, 3.33237927e-01, -3.93364254e-01,  5.30225822e-02, 1.83785394e-01,  2.16087545e-01,  1.24327633e-01, 5.35035653e-02,  1.62757289e-02, -3.91530565e-01, 1.01718276e+00,  3.11488585e-01, -1.27245255e-01, 1.27390819e-01,  1.30731412e-01, -1.05999075e-01, 2.44756315e-01,  1.58768070e-01,  3.16083707e-01, -2.59601511e-01,  3.41257835e-01,  2.40125405e-02, 1.77791597e-01, -2.50287151e-01,  6.56175348e-01, 1.77166835e-01,  1.06985014e-01, -8.54929516e-02, -3.00856199e-02, -1.55341724e-01,  9.69604293e-02, -2.88303319e-01, -7.53219120e-01, -1.64554037e-01}, {3.22168061e-02,  5.53742823e-01,  1.23922211e-01, -2.34386911e-01, -4.34364177e-01,  6.98315570e-03, -2.15512516e-01, -9.41119596e-02, -3.55202286e-02, -2.30355546e-01,  2.32004101e-01,  6.67590654e-01, -5.48333061e-01,  1.26965341e-01,  4.38644910e-01, -3.86728493e-02,  1.90135881e-01,  3.89137894e-05, 3.96871505e-01,  2.30950064e-01,  7.80728794e-02, -3.55672502e-02,  5.80285181e-01,  7.21888306e-01, -1.85625552e+00,  3.10408983e-01,  3.50441747e-01, 3.04133048e-01,  1.37562117e-01,  3.98273730e-01, 4.90261327e-01, -5.94808555e-02,  2.28965385e-01, 8.01046572e-01, -3.07917948e-01,  5.83613479e-02, 1.83586643e-01,  7.49603198e-02, -4.88460174e-01, 9.15644284e-02,  3.31672513e-01,  5.32643897e-02, 3.57055775e-01,  6.12584604e-01,  6.04103546e-01, 2.43126179e-01,  5.83904814e-01,  3.05136780e-01}, {-2.44079471e-01,  6.94797554e-01,  5.86750092e-01, -4.21126411e-02,  6.87010647e-01, -3.71947525e-01, 1.12655975e-01, -6.03293853e-01, -6.79906527e-01, 5.66036158e-01,  7.09398525e-02,  2.24695400e-01, 2.41799606e-02,  6.06836467e-01,  5.45220836e-01, 6.26102867e-01,  4.44518708e-01,  1.89753262e-01, 6.79710945e-01, -4.30112020e-01,  2.17951729e-01, 2.23386643e-01, -5.18370132e-01,  3.40332795e-01, -1.30507553e-01,  6.19971315e-01, -1.03966615e-01, 6.61658228e-02, -3.90947891e-02,  8.71195433e-01, 2.49791545e-01, -1.66438392e-01, -9.77562608e-02, 6.07947756e-02,  6.21144033e-01, -5.48036025e-02, -3.54921448e-02, -2.07043399e-01, -4.42799574e-04, 1.50276795e-01,  1.35220461e-01,  5.33021770e-01, -3.72285393e-01, -9.75954813e-02, -8.27959378e-01, 3.00972277e-01,  1.22054924e-02, -6.99423034e-02}, {5.24921274e-01,  5.40186458e-01, -1.70278095e-01, 2.84023980e-02,  7.38981297e-01, -1.30179104e-02, 1.75269185e-01, -2.91141886e-01, -3.66754518e-03, 1.51658401e-01, -9.28644967e-02,  2.08371567e-01,  7.08305041e-03, -1.16496112e-01,  1.22387041e-02, 5.75606929e-01,  2.70891029e-01,  1.09669726e-01,  1.74997460e-01,  1.19362591e-01, -4.84394563e-01,  3.20083611e-01, -4.26334772e-01,  4.37466597e-01,  -1.86911600e-01, -9.60089998e-02, -1.67287680e-01,  7.49022843e-01,  6.10218507e-01,  8.23321578e-01,  -1.23779300e-01,  3.41967768e-01,  2.23997153e-01,  5.70256678e-02,  4.74234935e-01, -9.76350261e-02,  9.05130134e-02, -1.66531697e-01, -6.79059992e-02,  -2.16261137e-01,  5.07512970e-02, -1.90577228e-01,  4.58521020e-01,  6.49441452e-01, -2.52057912e-01,  5.34677089e-02, -3.69710544e-01,  5.28942932e-01}, {2.39759596e-01, -8.66297477e-01, -7.88818350e-02,  1.76336374e-01, -1.07790268e+00,  7.40264641e-01,  -4.35451663e-01,  9.45119499e-01,  8.02530964e-01,  -6.03635896e-02,  6.11230558e-02, -1.37160497e-01,  2.26244938e-01, -5.57088051e-02, -1.74275349e-01,  -8.30144533e-01, -2.42547667e-01, -2.58627650e-01,  -4.52759373e-01,  5.99497442e-01,  4.27529876e-01,  -6.25756996e-01,  7.89713826e-01, -6.22744142e-01,  3.47071477e-01, -5.61133824e-02,  8.51186195e-02,  -5.41391188e-01, -9.73412812e-02, -1.73886062e+00,  1.41417520e-01,  3.24854898e-01,  2.90652293e-01,  -1.30636290e-01, -5.94851228e-01,  2.18032626e-01,  2.48429456e-01,  4.58087323e-01,  4.27336472e-01,  1.80577558e-01,  1.81698925e-01, -8.55734593e-02,  4.38079063e-01, -6.89551075e-03,  1.09217532e+00,  7.21073959e-02,  2.69932664e-01,  9.35405760e-02}, {3.16492857e-01,  4.70197271e-01, -2.18794770e-01,  1.65589691e-01, -3.17182869e-01, -1.89699655e-01,  9.16551712e-02, -6.28890315e-01, -1.38486479e-01,  5.34359092e-01, -2.38105832e-01,  3.54296334e-01,  -3.24071058e-01,  8.30363211e-01, -3.48348610e-01,  4.63077724e-02, -4.32117613e-01, -6.41671978e-01,  2.06136653e-02,  2.16174662e-01,  5.64745771e-01,  -3.59938020e-01,  8.00656195e-01,  3.68451709e-01,  7.30980786e-02,  8.67198358e-02,  8.55161503e-01,  -1.76493855e-01, -4.39465510e-01, -2.77874658e-01,  -3.12564868e-01,  2.30840562e-01,  6.95854716e-01,  1.93158795e-01,  3.85106272e-01, -2.06933171e-01,  5.80318653e-01,  7.83068919e-02,  6.08825027e-01,  4.09866609e-01,  6.35944126e-01, -2.46491993e-01,  3.85177777e-01,  4.54026390e-01, -4.72762708e-01,  5.05436308e-01,  4.03103877e-01,  2.39735313e-01}, {-2.71545511e-01,  3.83043921e-01,  2.67680276e-01,  -2.52554556e-02, -6.43146929e-01,  6.42569151e-01,  1.42298772e-01,  1.40254109e-02,  3.66704622e-01,  2.32648783e-01, -3.45976269e-01,  3.59249142e-01,  1.96340948e-01,  4.57278840e-01,  1.24014424e-01,  4.41188206e-02,  1.44767320e-01, -1.98622447e-01,  -5.53120368e-01, -1.17114860e-02,  2.99276541e-01,  -1.82949652e-01,  5.66403236e-01,  3.70431807e-01,  2.94498410e-02,  3.71090888e-01,  7.64631433e-01,  5.67538259e-01, -2.94728654e-01, -2.73839190e-01,  7.95479256e-02,  1.88466585e-01, -1.01211225e-01,  1.36412788e-01,  4.47786122e-02, -2.35489731e-01,  5.98654825e-01, -6.35558716e-01, -4.96856093e-02,  4.90578775e-02,  4.06950109e-01,  4.35753640e-01,  3.14184296e-01, -5.02267819e-02,  3.22439288e-02,  5.55731250e-02,  3.13993369e-01,  7.65615015e-03}, {3.07849038e-01, -3.53970848e-01,  2.98169093e-01,  -9.60942849e-02,  7.22320822e-01,  1.71493781e-01,  -4.34999825e-01,  8.09775744e-01,  1.24098467e-01,  -3.04924576e-01,  4.60686418e-01, -4.57503620e-01,  3.08008396e-01, -6.89399085e-01,  5.76111425e-01,  2.01748222e-01,  5.76926114e-01,  6.91574474e-01,  6.32307153e-01,  2.43464699e-01, -4.52165696e-01,  5.10410269e-01, -1.11677501e+00, -5.35605710e-01,  -1.78755698e-02,  1.59228635e-01, -1.56437172e+00,  -1.13548217e-01,  9.05752156e-01,  5.35867739e-01,  5.88800030e-01,  8.93535970e-02, -2.26569138e-01,  -1.93367638e-01, -1.59991570e-01,  3.12653210e-01,  -7.17292930e-01,  6.74132095e-01, -2.24690621e-01,  -3.79887666e-01, -6.56171680e-01,  3.43956067e-01,  -5.30587298e-02, -7.56667903e-02,  4.99176761e-01,  -6.16000425e-02, -5.16602580e-01,  1.92816329e-01}, {2.25935387e-01, -2.57584919e-01,  4.57679314e-01,  -3.40278957e-02, -2.98829390e-01,  1.68726371e-01,  6.58692253e-02,  4.26940595e-01,  3.42482123e-01,  4.29080910e-01, -1.17894841e-02,  3.49611221e-01,  -8.27356302e-01,  2.05789813e-01,  4.15875516e-01,  1.93571056e-01, -7.58667122e-02, -1.93145761e-03,  5.80806773e-01,  2.89801257e-01,  1.78933959e-01,  -1.29209848e-01,  1.58378215e-01, -5.18357162e-02,  -5.01802207e-02,  8.38721813e-01, -3.12983650e-01,  3.39437700e-01,  6.78614385e-01, -2.25210359e-01,  -5.00987383e-01,  2.89418131e-01,  1.93224195e-01,  1.29961528e-01,  2.20564819e-01,  1.33721280e-01,  1.26359190e-02,  5.36244153e-01, -5.36259615e-01,  -5.73644708e-02,  3.85401577e-01,  4.06558638e-01,  5.22200462e-01, -8.55463978e-02,  1.96362962e-01,  -3.47184272e-01,  4.92665609e-02,  4.93835248e-01}, {4.57692205e-02,  3.64951144e-01, -1.53082967e-02,  -7.48385700e-02,  2.60914272e-01,  6.14500564e-01,  6.30095047e-02,  3.40565505e-01, -1.37795504e-01,  1.29786596e-01, -7.64063401e-02,  3.95099192e-01,  2.66877896e-01,  5.78250031e-02,  3.65336667e-01,  9.20068582e-02,  7.65209415e-02, -1.44723997e-02,  9.98327931e-02, -3.29691172e-01,  9.21691830e-02,  -6.20032021e-02,  6.16060274e-02,  6.73413717e-02,  -5.25612637e-03, -2.27489374e-01, -2.81232510e-01,  1.87814677e-01,  3.89076756e-01, -3.51015008e-01,  1.09083576e-01, -3.43554703e-03,  3.53160838e-01,  1.46878992e-01,  1.89469029e-01,  1.52776526e-01,  1.69885179e-01, -4.64766297e-02,  6.12868456e-01,  3.78815407e-02,  2.64430459e-02, -6.84113887e-02,  -4.88840101e-01, -1.49745327e-02,  4.35094991e-01,  2.38609187e-01,  4.21876822e-03,  2.65229796e-01}, {2.76370854e-01,  2.47249184e-01,  7.90515279e-02,  7.07248839e-02,  1.15138049e-01, -1.91893661e-01,  -3.12184884e-01, -4.04430368e-01,  1.26029421e-01,  -2.57501920e-02,  2.17589947e-01, -4.27249570e-01,  7.48283750e-01,  1.79013592e-01, -2.66478166e-01,  1.19537984e-01,  4.29556732e-01,  1.34477422e-01,  -1.28024721e-01,  4.64429028e-01,  2.75221796e-02,  9.06444984e-02, -9.88286833e-02,  5.11040465e-02,  2.17246218e-01, -6.35342588e-02,  5.68184376e-01,  -2.47662923e-01, -6.78407346e-01,  5.51112249e-01, 8.29661912e-01,  2.87821682e-01,  1.00758018e-01,  -1.27393180e-01, -9.64004716e-02, -1.06909696e-02,  2.25987097e-01, -1.05510027e-01,  4.86193773e-01,  1.01406104e-01, -1.00298144e-01,  1.53153349e-01,  3.38567494e-01,  4.44675516e-01, -3.46970994e-01,  6.65756802e-01,  4.47529609e-02, -2.43334345e-01}, {3.25645127e-01,  5.74789494e-01, -4.02756169e-01,  8.43432241e-02,  2.02769398e-01,  5.48131709e-01,  4.67344467e-03,  3.27193396e-01,  5.05922647e-01,  7.85250145e-01,  1.83635516e-01, -3.89071228e-01,  9.62196310e-02,  1.61237168e-01,  4.16979875e-01,  1.71739295e-01, -2.26223304e-01,  2.65390503e-01,  -1.55880949e-01, -4.63668370e-01, -6.05073488e-01, 6.68827638e-02,  3.13580715e-01,  1.05159192e+00,  -7.44185735e-02,  1.59323330e-01,  2.81391296e-03,  1.97995453e-01,  4.84876271e-01,  9.56445061e-01,  -3.71600932e-01, -2.21951519e-01,  8.09053194e-01,  -6.85608157e-01,  2.20178045e-01,  7.13390883e-02,  2.93514053e-01, -1.90401851e-01, -2.45490952e-01,  -4.17641183e-02,  5.64086435e-01, -2.51784979e-01,  3.62154622e-01, -1.60072443e-01,  1.93218234e-01,  6.67009438e-01, -6.43108442e-01,  4.33879567e-01}, {1.49803055e-01, -3.36478043e-01,  4.18006100e-01,  3.95152390e-02,  3.58270525e-01, -3.29338183e-01,  4.96162848e-03,  1.05018833e-02, -9.80999779e-02,  7.94833235e-01,  8.09648757e-02, -4.64841824e-01,  -1.20234107e-02,  2.80720340e-01,  2.97362913e-01,  2.91238627e-01, -1.12631786e-01,  1.84216715e-01,  2.37430797e-01,  5.13834356e-01, -5.42918993e-01,  7.10931699e-02,  1.94573154e-02,  1.03556791e+00,  -6.63943637e-01,  2.55566440e-01, -1.92781556e-02,  -1.66151462e-01,  4.66755499e-01,  9.24098676e-01,  1.90777287e-01,  4.70608892e-02,  3.97435965e-01,  -7.03280269e-01,  2.03113440e-01,  6.63051068e-02,  1.66231709e-01,  8.06452940e-02,  3.31797296e-01,  -1.02654622e-01, -2.69864950e-01, -6.61525558e-02,  7.32573152e-01,  5.10597536e-01, -4.68431115e-01,  -2.15720443e-01, -8.12981841e-01,  6.02241858e-01}, {4.38664644e-02,  7.89385544e-03,  5.32075639e-01,  6.80688758e-02, -3.37215718e-01,  2.32303729e-01,  -2.80132466e-01, -2.48834083e-02, -1.47188767e-01,  -7.29935403e-01, -1.33171849e-01,  5.67848538e-01,  6.55442559e-02,  1.15484382e-01, -1.79522258e-01,  -2.12274287e-02,  4.95291578e-01, -2.26115769e-01,  2.50036047e-01,  5.05110282e-01,  9.12320581e-01,  -1.55772065e-01, -2.69351914e-01, -2.31851478e+00,  4.48030346e-01,  1.73426768e-01,  9.35948125e-02,  2.17574893e-01, -4.59297694e-01, -1.51047840e+00,  5.89036463e-01,  6.01766551e-01, -5.71555352e-01,  9.09407293e-01, -1.93013762e-01,  1.73927609e-01,  -1.72913488e-02,  5.02128534e-01,  4.66104793e-01,  1.64490329e-01, -1.22251043e-01,  6.91785575e-01,  -4.59533197e-01,  2.34660682e-01,  2.16824991e-01,  -1.26134960e-01,  9.47976387e-01, -3.39424552e-01}, {6.75575625e-02,  1.41635688e-01,  2.06402221e-01,  3.24071764e-02,  3.95866129e-01,  9.55574799e-01,  7.33318126e-02, -2.35931044e-01,  5.21458604e-02,  5.75740270e-01,  1.10384802e-01,  1.38399219e-01,  4.24722016e-02,  4.68361760e-01,  2.42455880e-01,  -9.62807224e-01,  7.49857588e-01,  1.57657232e-01,  1.94068973e-01,  5.34110301e-01,  7.70271924e-02,  2.21472631e-01,  1.46298771e-01, -1.24164120e-02,  1.37394968e-01, -2.87028622e-01, -7.10785711e-02,  3.38830072e-01,  4.32735720e-01, -1.02132234e-01,  2.60946617e-01, -1.09672062e-01, -2.45922688e-01,  1.17814432e-01,  5.39071771e-01,  6.31318235e-02,  2.65729650e-01,  4.51500443e-02,  1.08350248e-01,  -3.40691844e-01,  6.81311545e-02, -4.49504763e-01,  3.64388581e-01,  1.52280604e-01, -3.60083930e-01,  -4.80098092e-01, -4.65764783e-02, -1.00252482e-01}, {6.31439097e-01,  1.83090791e-01, -1.60175461e-01,  1.74672560e-01,  4.77020769e-01,  3.20747625e-01,  9.44949646e-02, -3.35035256e-01,  1.04972351e-01,  -4.00706265e-01,  2.01634765e-01,  5.70164816e-02,  -2.08158722e-02, -2.08741225e-02, -2.86299020e-02,  -7.38889190e-02,  3.61718090e-01,  1.75171553e-01,  5.24064712e-01,  2.45832653e-01, -4.62441983e-04,  3.38273696e-01,  5.21468404e-02, -4.56912257e-02,  5.22139816e-02,  3.64146736e-01, -1.18272973e-01,  -2.79792080e-01,  2.52365714e-01, -1.39443766e-01,  -1.69962299e-01,  6.88526595e-01,  4.47139210e-01,  6.41676876e-02,  3.66868771e-01,  1.25321894e-01,  1.68868996e-01,  1.94719030e-01, -2.90661531e-01,  -2.91093044e-01,  1.21977329e-01,  3.59094091e-02,  2.25511118e-01,  6.30606879e-02, -1.57855316e-02,  2.90561616e-01,  4.95546316e-02, -8.47362846e-02}, {-1.74682916e-01,  1.38473196e-01,  4.08469466e-01,  -6.89195475e-02, -7.60740106e-01, -6.41165434e-01,  -3.85621604e-01,  6.20081888e-01,  1.86418187e-01,  2.08981807e-01, -3.42150828e-01,  2.44610536e-02,  2.52402695e-01, -3.37440358e-02,  1.46141821e-01,  1.12433434e+00, -5.32362605e-01, -3.82485305e-01,  -1.05521766e-01, -2.04705907e-01,  1.27246910e-01,  -4.85308730e-01, -4.93597886e-02,  1.93508335e-01,  1.62491565e-03,  5.13355407e-01,  3.74953247e-01,  1.87737045e-01, -2.61902009e-01,  4.51952488e-01,  3.33472921e-01,  2.03773086e-02,  3.51625682e-01,  -3.07811596e-02, -5.73138086e-01,  6.79227827e-02,  -2.08869427e-02,  1.81761140e-01,  5.31305970e-01,  5.35166150e-01,  1.44970411e-01,  6.47531624e-01,  1.88629242e-02,  1.91099940e-01,  5.63205805e-01,  7.04917646e-01,  1.07134197e-01,  5.84238257e-01}, {-5.22159539e-01, -1.29363698e-01,  3.97028812e-01,  5.72660163e-02,  8.94337731e-02,  4.13403468e-01,  6.86138421e-02,  1.48935859e-01, -2.52599381e-01,  -4.70626995e-01,  1.25937252e-01,  8.27017923e-02,  3.13843252e-02,  1.74553038e-01, -4.97876763e-02,  6.42804148e-01, -1.02926728e-01,  1.12584732e+00,  1.42575117e-01, -4.83326600e-01,  1.96584490e-01,  -4.04913186e-03, -1.56628807e-01, -6.80496319e-02,  1.33421940e-01,  5.94509843e-02, -3.67700430e-02,  4.09661816e-01, -1.70769550e-02, -1.41066527e-01,  -2.07038602e-01,  5.20262020e-01,  4.59154675e-01,  5.86013598e-02, -3.13907497e-02,  8.23430353e-02,  3.20008353e-01,  2.76072366e-01,  1.81497014e-01,  1.53101462e-01,  2.72078032e-02,  1.83450863e-01,  3.58391469e-01,  6.58552162e-01, -2.89418583e-01,  -2.07781605e-01,  9.22660452e-03,  3.15363964e-01}, {3.82575698e-01,  2.95499528e-02,  3.34532890e-01,  4.10252245e-02,  3.36123958e-02,  2.59876547e-01,  9.96032485e-02, -2.52803480e-01,  3.94476862e-01,  1.08452359e-01,  1.45591943e-01,  1.05266357e-01,  1.14446573e-01,  1.27697774e-01,  1.59567810e-01,  -6.63714884e-02,  2.01514629e-01,  1.11135645e+00,  9.29037748e-02,  5.05346617e-01,  4.64021112e-01,  -1.18610779e-01,  2.17785547e-01, -5.29104041e-02,  3.25249359e-02,  5.23557211e-01, -9.74793743e-02,  -5.10486465e-01,  3.23909713e-01, -1.18319281e-01,  1.78986775e-01,  2.20373010e-01,  3.91161880e-01,  -5.05703844e-03,  1.29171771e-01,  7.08929956e-02,  2.31811196e-01,  9.06355173e-03, -5.35918266e-02,  5.06064738e-02,  8.40576017e-02,  3.85626471e-01,  -1.43480578e-01,  2.57685904e-01, -3.84235269e-02,  1.78313656e-01,  1.78442504e-01, -9.54086676e-03}, {5.36802441e-01,  4.90375710e-01, -1.73513590e-01,  1.52479789e-01,  1.62167957e-01, -3.30873481e-02,  -3.84242739e-01,  2.91375039e-01,  9.33596905e-02,  6.84950494e-01, -1.63843599e-01, -1.78725229e-03,  1.55584439e-01,  2.72405701e-01,  3.30216201e-01,  -2.64735247e-01,  4.36808677e-01, -1.80214858e+00,  2.95175582e-01,  5.35421857e-01, -2.52353958e-01,  8.15408246e-02,  7.31329387e-02,  1.75470966e-01,  -5.66628193e-02,  1.11013818e-02,  2.83342630e-01,  1.87992570e-01,  1.47232969e-01,  3.57308594e-01,  3.93126504e-01, -1.82327540e-01, -1.69320454e-01,  1.06388441e-01,  2.14539932e-01,  1.12650122e-01,  -2.53835844e-01,  1.58371270e-01,  3.29862170e-01,  -6.08267075e-02,  2.46471800e-01, -9.73732846e-02,  2.81785738e-01, -3.57536861e-01,  5.31569689e-01,  4.79997541e-01, -5.82006335e-02,  1.45689210e-01}, {2.94615047e-01,  5.16951250e-02, -5.41900994e-01,  -2.48113905e-02,  2.05677905e-01, -8.33028788e-03,  5.84112188e-02, -3.31899471e-01, -8.32341286e-02,  3.18445775e-01,  1.13227235e-01,  4.01332660e-01,  5.13939806e-01, -5.58657919e-01,  6.54975786e-01,  2.81150386e-01,  6.45941508e-01,  2.02731394e-01,  4.36143133e-01,  4.37997494e-01, -5.73634361e-01,  -1.14555200e-01,  3.74210887e-01, -2.17388552e-02,  3.38727183e-01,  6.86699671e-01,  9.44950689e-01,  3.42402046e-01, -2.44584663e-02, -2.12415323e-01,  -1.97217085e-01,  3.91967637e-01, -3.58207810e-01,  1.24036938e-01, -3.64767725e-01,  1.80968137e-01,  6.74831713e-01, -6.12193593e-01,  4.67692553e-01,  -1.30668314e-01, -1.72817795e-01,  5.42110409e-01,  1.99891167e-01, -3.23047968e-01, -1.27721321e-02,  1.31109092e-03,  5.73858047e-01,  4.96314800e-01}, {-1.42450329e-01,  9.38636156e-02,  5.68634185e-01,  3.70126959e-02, -2.29383535e-02,  3.56245722e-01,  1.16376540e-01,  8.79639571e-02,  3.06583461e-01,  -4.92578520e-02,  8.97307764e-02,  4.18166472e-01,  3.27594644e-02,  2.46783976e-01,  5.04943075e-01,  -2.55945738e-01,  5.95798309e-01,  1.90087501e-01,  2.05502257e-01, -2.10304723e-01,  2.93798612e-01,  1.51558922e-02,  3.31681425e-01, -7.53719066e-02,  3.32150278e-01,  3.40293893e-01,  9.45231206e-01,  -4.09404016e-01, -1.17180896e-01, -1.81323479e-01,  -1.41044234e-01,  2.50963501e-01, -2.31383347e-01,  4.00289287e-02, -3.25331295e-01,  1.35866424e-01,  6.89120292e-01,  3.92642294e-01,  1.03627634e-01,  -5.02723203e-01,  1.02842993e-01,  1.95117586e-01,  5.46717833e-01, -2.89472640e-01,  4.20535572e-02,  2.95688339e-01,  6.84623822e-01,  3.41849850e-01}, {1.53152509e-01,  1.83968939e-01,  5.16277343e-01,  1.50252977e-01, -1.17504907e-01,  1.61378869e-01,  -3.70290664e-01,  4.50881295e-01,  7.23546698e-02,  2.78495587e-01, -6.41997296e-02, -4.87879381e-01,  -3.45175160e-01,  7.27326009e-01, -6.03339371e-01,  1.14299995e-01, -6.64918305e-01, -1.81302233e-01,  -2.18173286e-01,  9.99798103e-02,  6.04759227e-01,  7.51523512e-02, -4.78806174e-01,  1.67378853e-01,  -4.42917251e-01, -3.45034871e-01, -1.43920834e+00,  3.25694843e-01,  4.18630923e-01,  5.15827029e-01,  5.88594873e-01,  1.35015623e-02,  8.24898827e-01,  -1.47230750e-01,  6.37269029e-01, -7.70515354e-02,  -9.06122934e-01,  8.00727072e-01, -1.39965240e-01,  5.47240174e-01,  3.50208910e-01, -2.09605435e-01,  -4.31777323e-02,  7.31120627e-01,  2.15827279e-01,  1.30470401e-01, -8.80148350e-01, -3.48558682e-01}};
    
    vector<vector<double>> weightsOutput = {{-4.48315531e-01, -7.05342848e-01,  3.70756373e-01,  -4.64209873e-01,  1.89986293e-01,  3.85478505e-01,  3.77074418e-01,  3.35492783e-02,  2.55984079e-01,  -4.60860204e-01,  2.31503523e-01,  4.88565401e-02,  7.63993574e-02, -3.16045521e-01, -7.67352826e-01,  2.79409729e-01}, {9.92086083e-02, -3.56266494e-01, -3.40371321e-03,  -7.01258943e-01,  7.21994086e-01, -6.37130526e-01,  -6.26606189e-01,  3.68220807e-01,  1.40022378e-01,  2.55800307e-01,  1.49038572e-02, -3.96135429e-01,  4.81704378e-01,  6.31673989e-02, -1.92267957e-01,  -1.02193776e-01}, {1.09363586e-01,  2.40053122e-01, -4.57870312e-01,  -1.02036064e+00, -1.60113146e-01,  4.03158881e-01,  4.34790388e-01,  4.57774928e-01,  2.19838748e-01,  4.11971844e-01, -4.54589000e-01,  1.28273123e-01,  -5.68056622e-01,  1.44900159e-01,  1.16626231e-01,  -6.91068883e-01}, {6.37832436e-02, -3.10019009e-01,  5.02109851e-01,  3.84843994e-01, -1.59373888e+00, -5.79198869e-01,  -5.48701345e-01,  4.16675112e-01,  3.05018169e-01,  2.25452622e-02,  3.10407239e-01, -4.56959570e-01,  1.30355339e-01,  1.14297802e-01, -1.35656930e-01,  -6.56648907e-02}, {-3.83967232e-01,  1.91071925e-01,  1.35599731e-01,  -7.85589297e-01, -7.72703234e-01,  7.12784615e-01,  -1.87149130e-01,  2.39651069e-01,  6.32236791e-02,  1.50754615e-01,  4.07841389e-01, -1.23207194e+00,  -2.46894422e-01, -1.43451835e-01,  5.65878376e-01,  1.66587403e-01}, {1.11002293e-01, -1.09308915e+00, -8.44604198e-01,  3.12992540e-01, -4.67506116e-01,  1.19797277e-01,  3.61879267e-01, -2.77485432e-02,  1.39367721e-01,  -3.52689553e-01, -2.95209824e-01, -9.44021013e-02,  5.24425526e-01,  5.53423918e-01,  2.08217224e-01,  -4.07762670e-01}, {2.71113314e+00,  3.11398164e+00,  2.89595206e+00,  2.49862634e+00, -1.49411627e+00, -1.43916987e+00,  -1.35440626e+00, -1.34701854e+00, -1.01896305e+00,  -1.26142295e+00, -1.24426267e+00, -1.02153755e+00,  -1.06611943e+00, -8.82112204e-01, -1.07813526e+00,  -1.13279818e+00}, {4.68695268e-01,  6.83743968e-01,  4.27295690e-01,  -2.66082698e-01,  6.97337107e-02, -1.40679490e-02,  2.51503222e-01, -7.14719208e-01, -1.22576973e-02,  -6.41705975e-01, -9.51833864e-01, -1.53305273e-02,  3.73926954e-01, -1.58076292e-01,  2.08314292e-01,  -4.92674157e-01}, {-2.88148148e-01,  3.96957868e-02, -9.88100215e-02,  5.54724950e-01, -4.21471094e-02,  3.24489944e-01,  -6.76416907e-01, -6.62278766e-02,  3.72429223e-01,  -6.41039459e-01, -2.42504503e-01,  2.64837165e-01,  2.46903025e-01,  2.91102093e-02, -3.75078112e-01,  -4.31116672e-01}, {-6.01496213e-01,  1.60561130e-01,  5.19515673e-02,  -7.25710123e-01, -6.49006048e-01,  3.59816088e-01,  -8.57188634e-01,  1.04744340e-01,  2.43445957e-01,  6.04512783e-02,  3.39446026e-01,  1.17501104e-01,  2.09196226e-01,  6.29184817e-01, -4.99188065e-01,  2.45679336e-01}, {-2.75327965e-01, -6.45290912e-01,  8.94401822e-01,  5.42259546e-01, -1.19936731e+00,  7.93646415e-02,  -1.28960800e+00, -9.93464015e-01,  3.71135687e-01,  9.16422336e-01, -7.39755601e-02,  3.60888246e-01,  3.01555129e-01, -2.91891034e-01,  3.83570010e-02,  -2.89028479e-01}, {-2.36248265e+00,  2.15716351e-01,  1.45299394e-01,  3.83561062e-01,  3.77816686e-01, -5.26808382e-02,  7.49326131e-02, -1.28325001e+00, -1.64594371e+00,  5.40339120e-01,  3.89809975e-01, -5.36761115e-02,  -8.49895802e-01,  4.86939345e-01,  7.50085276e-02,  4.90198693e-01}, {8.96241582e-02,  1.27671344e-01, -2.31935000e-01,  2.57840886e-01, -3.95680685e-01,  1.83837479e-01,  1.39093247e-01, -8.17315425e-01,  5.73140131e-01,  -1.56008781e-01, -5.11826361e-01, -9.76934949e-01,  -1.73246630e-01,  2.82958550e-01,  1.02782157e-01,  4.24150158e-01}, {-1.31789066e+00, -9.48870912e-01, -1.43305725e-02,  -1.41415063e-01,  4.24645048e-01,  3.83691445e-01,  -3.45389536e-01,  3.16733584e-01, -1.59215688e-01,  2.31614433e-01,  3.99305684e-01,  2.17098376e-01,  6.44546975e-02,  4.38839596e-01,  1.31835100e-01,  -6.01915208e-01}, {-1.08055634e+00,  2.69881270e-01,  2.15475921e-01,  -6.38377260e-01,  2.86359837e-01,  3.80481218e-01,  1.69077768e-01, -4.01582424e-01, -5.14250237e-01,  4.14632556e-01, -4.75895330e-01,  1.15308968e-01,  1.87738497e-01,  1.08376048e-01, -1.20773765e-01,  2.44540367e-01}, {-3.00175658e-01, -1.56165522e+00,  4.74704116e-01,  -1.39650802e-01, -2.71022094e-01,  3.81171888e-01,  -4.62808454e-01,  3.15111447e-02, -4.82549524e-02,  2.16484069e-01, -2.65850616e-01,  1.65599698e-02,  -2.29797109e-01, -1.01320436e+00,  7.15786974e-01,  4.48852004e-01}, {2.25817962e-01, -8.57154783e-01,  1.70903372e-01,  -3.39640758e-01,  1.56056977e-01, -7.57983972e-01,  3.65653014e-01, -1.75716675e-02,  5.89703610e-01,  2.46741364e-01, -6.48457147e-01,  5.05985475e-03,  -2.84102597e-01,  3.62934624e-01, -2.07095289e-01,  2.79083153e-01}, {1.51124579e-01,  3.09629275e-02, -2.41616985e+00,  -2.68135321e-01,  2.91543180e-01,  9.45779198e-02,  -1.31589737e+00,  2.82356492e-01, -9.67580758e-02,  3.69182403e-01, -9.09192723e-01,  1.03797220e-01,  4.52934888e-01, -1.69755945e-01,  4.54382631e-01,  4.34310897e-01}, {4.24921793e-01, -8.24114537e-01,  4.80075239e-01,  -4.45801669e-01,  2.13971426e-01, -4.32495885e-01,  1.15222234e-01, -6.92719517e-01, -2.70697811e-01,  3.73278668e-01, -2.01435690e-02,  2.45696836e-01,  -3.45643215e-01, -1.10957243e-01,  5.65592307e-02,  2.63633269e-01}, {2.78404834e-01,  2.64186974e-01, -3.20472783e-01,  4.73769585e-01, -6.44870187e-02, -4.18847378e-01,  2.41523928e-01,  7.44548259e-02, -6.86149261e-02,  -6.57471214e-01,  5.41362021e-02,  2.60276655e-01,  -8.20577634e-01,  1.71215162e-01, -8.27472862e-01,  4.25231432e-01}, {3.07146144e-01,  4.09209356e-01, -4.07546860e-01,  5.70914521e-01,  2.58441463e-01, -6.54414594e-01,  4.16294660e-01, -2.53860256e-01, -1.41964081e-01,  4.74044491e-01, -3.83342188e-03, -1.73632611e-01,  -3.39856240e-01, -1.94252057e-01, -2.39161541e-01,  -1.09289360e+00}, {5.92059788e-01, -3.96296462e-01,  1.02042281e+00,  1.77448427e-01,  9.01869004e-01,  6.65940971e-01,  -2.10457062e-01,  6.22321948e-01, -7.45816569e-01,  -4.56993713e-01, -1.08223582e+00, -8.87461683e-01,  -8.54087502e-01, -3.63577800e-01, -1.18702081e-02,  -6.62655269e-01}, {3.22389016e-01, -6.02957399e-01, -6.63374524e-01,  1.81978726e-03, -4.48893429e-01,  4.14160344e-01,  4.09716695e-01, -1.46991824e-01, -1.01269387e+00,  -5.43413488e-01,  4.29758429e-01,  3.51313224e-02,  4.76714383e-01,  3.04418174e-01, -7.24558085e-01,  -4.20022693e-02}, {-1.83342232e+00,  1.99730690e-01, -1.55588484e-01,  6.52337429e-01, -6.68072818e-01,  2.03768479e-01,  4.65115206e-01,  3.41621121e-01, -1.69659287e+00,  1.36118268e-01,  2.41848586e-01, -2.85936670e-01,  6.45509560e-01, -7.45169354e-01, -6.59114587e-01,  -1.94473171e-01}, {-1.90448678e+00,  7.06793145e-02,  2.57647199e-01,  4.00572138e-01, -1.28959872e+00,  9.14072303e-02,  4.27379264e-01,  2.63208558e-01,  2.72046209e-01,  -1.52164688e-01, -4.58920029e-01, -5.20583895e-01,  1.49075288e-01,  2.09443824e-01,  8.16830311e-02,  4.71672448e-01}, {1.44632868e-01,  3.58433253e-01, -9.84054544e-01,  -5.18288447e-01, -4.20989677e-01, -5.28460554e-01,  3.01596764e-01,  4.66871057e-01, -2.12241608e-01,  4.35831394e-01, -3.62720665e-01,  5.84922730e-01,  -1.78380714e-02, -4.91345717e-01, -2.56017166e-01,  2.72897753e-01}, {1.12730418e+00, -5.24347470e-01, -4.14732404e-01,  -8.23789643e-01, -2.37430682e-01,  9.95384262e-01,  -8.21791367e-01, -2.52441492e-01, -8.14438622e-01,  -2.02004983e-01,  8.76891825e-01, -1.12067779e+00,  -1.31748606e-01, -8.68457794e-01, -1.93414387e-01,  5.83194049e-01}, {3.40702952e-01, -2.19590377e-01, -7.47932155e-01,  -6.72344215e-01, -2.12677226e-01, -5.72397474e-01,  6.58847393e-02,  2.14127087e-01, -1.93456462e-01,  -3.12339190e-01, -7.23960621e-01,  3.16278362e-01,  1.19436153e-01,  5.37186661e-01,  7.12095122e-01,  3.57378725e-01}, {4.72962257e-01, -5.99489333e-01,  4.47220564e-01,  -9.67492893e-01,  3.02856457e-01,  5.33292946e-01,  -4.73999170e-01, -3.95355433e-01, -3.78905247e-01,  -5.51024742e-01, -2.97342484e-01,  3.29337767e-01,  2.17012923e-01,  2.00451952e-01, -3.08281251e-01,  1.76197364e-01}, {1.38529146e-01, -7.60011223e-01, -6.90322384e-01,  1.64703768e+00, -8.01043738e-01, -3.83503508e-01,  9.10375637e-01, -9.86388980e-01, -7.87883726e-01,  1.04763864e+00, -8.71731379e-01, -6.55194694e-01,  7.10217804e-01, -8.05020413e-01, -6.60910576e-01,  -7.12163670e-01}, {6.71501464e-01,  9.05502744e-02,  5.54754057e-01,  1.11070716e-01,  5.67235755e-02, -1.09729528e-01,  -4.00120103e-01,  4.84472112e-01, -3.88709677e-01,  9.49109399e-02, -4.65514929e-01, -6.14265246e-01,  -4.80590637e-01,  1.13268759e-01, -4.29855602e-01,  -2.42104503e-01}, {-8.50116464e-01, -5.48023348e-01, -8.35003658e-01,  4.84877812e-01,  4.62139164e-01,  1.41375852e-01,  3.79422939e-01,  6.56147521e-02,  2.09256799e-01,  -3.39432878e-01,  5.57662138e-02,  7.68323635e-02,  -3.20717098e-01, -5.00218131e-01,  2.26250882e-01,  2.76191369e-02}, {2.75407246e-01,  1.57336881e-01, -9.23044131e-01,  -4.81601946e-01, -5.14168057e-01,  2.90329712e-01,  2.43851213e-02,  4.59706184e-01, -1.98959289e-01,  -3.29040056e-01,  4.76631744e-01, -1.10494340e-02,  3.00241101e-01, -3.07408100e-01,  1.49784650e-01,  -2.94999252e-01}, {3.52946704e-01, -5.18208295e-01, -8.04737404e-02,  3.21861290e-01, -2.17827738e+00,  9.31578507e-02,  3.51593695e-01,  6.46167398e-02, -1.72444943e+00,  3.82629582e-01,  2.81086628e-01, -5.79488911e-02,  -1.08048663e+00,  3.47426157e-01,  2.68945787e-02,  2.88435491e-01}, {5.24213763e-01, -1.67035382e+00, -5.01516248e-01,  3.05858796e-01,  1.35817393e-01, -1.15971195e+00,  3.09148417e-01, -3.62158639e-01, -2.07534151e-01,  8.82567326e-02,  6.61012989e-01,  2.29614069e-01,  -3.99920499e-01,  3.20710206e-01, -2.70447322e-01,  -3.11864911e-01}, {4.96116875e-01, -7.89914013e-02,  4.42806821e-01,  4.90171148e-01,  1.20230534e-02, -1.94049531e+00,  -1.78831039e+00,  2.36081756e-01, -2.10975679e-01,  2.14594045e-01,  1.78900655e-01,  4.63638180e-02,  3.51738454e-01, -2.65422775e-01,  3.31709046e-01,  2.23477349e-01}, {-1.79071219e+00,  3.49210846e-01, -7.55646318e-04,  -4.81347014e-01,  2.30795174e-01, -1.41517776e+00,  5.33947072e-01, -2.61111344e-01,  1.77145969e-01,  -4.75376927e-02,  2.21409394e-01, -3.54003669e-01,  4.17295315e-01,  2.71101368e-01,  6.68453915e-02,  3.50990696e-01}, {3.44057801e-01,  4.46728369e-02,  4.29183896e-01,  -1.23849978e-02, -5.06386055e-01,  2.81663203e-01,  2.43131784e-01, -6.99532761e-01,  2.74509147e-01,  -2.15736434e-01,  1.29049265e-01,  1.85236980e-01,  -3.55061388e-01, -1.32968068e-01,  1.53043708e-01,  -8.99184930e-01}, {-7.41138943e-01,  5.48412959e-01, -2.89410037e-01,  2.76790369e-01,  1.76640678e-01, -2.66748533e-03,  2.26790208e-01, -2.93262215e-01,  1.55967826e-02,  -1.02496553e-02,  2.49488507e-01, -9.78093233e-01,  -4.34737145e-01,  1.72546503e-01,  1.16999511e-01,  2.03926627e-01}, {2.95845735e-01,  8.25537962e-01, -6.49593892e-01,  1.68997352e-01, -8.09078825e-01, -7.21912754e-01,  -2.20823023e-01, -1.01854343e+00, -1.29370394e-01,  -1.39323384e-01,  5.24952269e-01, -2.11297347e-01,  7.15213267e-02, -2.78951903e-01,  6.03755782e-01,  2.67185716e-01}, {-1.60535090e-01,  3.69372698e-01, -6.62811571e-01,  4.28275232e-01,  4.03560523e-01, -3.21249825e-01,  -7.39539100e-01, -6.21178662e-01, -4.18795308e-01,  -1.31254351e-01,  2.84429157e-01,  3.13911540e-01,  4.67345395e-01, -2.17844036e-03, -1.22023408e-02,  -2.41451952e-01}, {-4.72377286e-01,  1.40106353e-01,  1.72942126e-02,  4.62210499e-01,  2.16708775e-01,  4.35674203e-01,  -6.80150800e-01, -2.98407904e-01,  2.22528103e-01,  4.65260428e-01, -6.24739881e-01,  8.46144691e-02,  -3.03150052e-01, -5.98642168e-01, -6.72963169e-02,  2.21661131e-01}, {-9.33746341e-01,  2.20214421e-01,  6.59695358e-01,  2.14386368e-01, -2.32956360e-01, -5.93533574e-01,  -2.64681242e-01,  2.88357534e-01,  1.07310330e-01,  -6.36114642e-01,  1.08230956e-01,  5.76325655e-01,  -3.79840695e-02,  2.21062325e-01,  3.38118974e-01,  -1.67512717e-01}, {3.84274838e-01, -1.40834255e-01, -6.52419574e-01,  1.92944360e-01,  4.72483904e-01,  2.80070725e-01,  -9.63390485e-01,  2.23331580e-01, -7.07646242e-02,  -6.27714831e-01,  3.61878091e-01, -2.37344925e-01,  -5.93467099e-01,  1.57666063e-01,  4.57644674e-01,  -4.22292879e-01}, {-1.25908396e-01,  3.54651012e-01,  6.47898912e-01,  3.39040027e-01, -1.23003729e-01,  3.95821729e-01,  3.57291481e-01, -1.64929216e-02, -7.62933850e-01,  -8.59624141e-01, -5.42205554e-01, -1.51306428e-01,  3.42835139e-01, -6.47329233e-01, -3.61997664e-01,  -2.86845324e-01}, {1.42742222e-01,  5.00124566e-01,  1.92923522e-01,  -7.36408259e-01,  2.94168844e-02, -5.63252743e-01,  1.71086110e-02,  4.54409500e-01,  3.29704725e-01,  1.80859473e-01,  1.62057362e-01, -4.24998101e-01,  4.15325326e-01, -5.88869362e-01, -3.74142844e-01,  -2.56654314e-01}, {1.20768718e+00, -6.20998309e-01, -4.30931775e-01,  4.92016654e-01,  6.06637661e-01,  9.31911151e-02,  -1.15274158e-01, -1.23169661e+00,  5.12490273e-01,  9.44785237e-03,  7.49699128e-02, -2.97376422e-01,  -3.24581107e-01, -5.46092687e-01, -2.70301545e-01,  -1.32448521e-01}, {1.82992224e-01,  5.21526863e-01, -6.53853311e-01,  -1.39885887e+00,  3.09063115e-01, -4.06468606e-01,  7.20797449e-02, -4.21195350e-01,  4.11680800e-01,  -4.59826519e-01,  1.81050707e-01,  3.52723216e-01,  -2.48720751e-01, -8.60829629e-02,  3.51057987e-01,  3.72137909e-01}};
    
    vector<vector<double>> inputWeightsGradient;
    vector<vector<double>> outputWeightsGradient;
    
    ////////////CACHE////////////
    vector<double> inputLayCache;
    vector<double> hiddenLayCache;
    vector<vector<double>> inputWeightsCache;
    vector<vector<double>> outputWeightsCache;
    
    vector<pair<int, int>> solutions;
public:
    void init()
    {
        //Входной слой
        vector<double> f1 (SIZES[0]);
        inputLay = f1;
        
        //Скрытый слой + слой активации
        vector<double> f2 (SIZES[1], 0);
        hiddenLay = f2;
        hiddenActivateLay = f2;
        gradientOnHiddenLay = f2;
        gradientOnActivateLay = f2;
        
        //Выходной слой
        vector<double> f3 (SIZES[2], 0);
        outputLay = f3;
        softMaxLay = f3;
        gradientOnOutputLay = f3;
        gradientOnSoftmaxLay = f3;
        
    }
    
    //random weights generation
    void generateWeights()
    {
        default_random_engine generator;
        uniform_real_distribution<double> distribution(0.0, 0.01);
        
        weightsInput.resize(SIZES[0]);
        weightsOutput.resize(SIZES[1]);
        
        for (int i = 0; i < SIZES[0]; i++)
        {
            weightsInput[i].resize(SIZES[1]);
            for (int j = 0; j < SIZES[1]; j++)
                weightsInput[i][j] = distribution(generator);
        }
        for (int i = 0; i < SIZES[1]; i++)
        {
            weightsOutput[i].resize(SIZES[2]);
            for (int j = 0; j < SIZES[2]; j++)
                weightsOutput[i][j] = distribution(generator);
        }
    }
    
    //Solution
    void solve()
    {
        streams;
        for (int step = 0; step < 5; step++)
        {
            init();
            for (int i = 0; i < 16; i++)
            {
                char a;
                cin >> a;
                switch (a)
                {
                    case 'X':
                        inputLay[i * 3] = 0;
                        inputLay[i * 3 + 1] = 0;
                        inputLay[i * 3 + 2] = 1;
                        break;
                    case 'O':
                        inputLay[i * 3] = 0;
                        inputLay[i * 3 + 1] = 1;
                        inputLay[i * 3 + 2] = 0;
                        break;
                    case '.':
                        inputLay[i * 3] = 1;
                        inputLay[i * 3 + 1] = 0;
                        inputLay[i * 3 + 2] = 0;
                        break;
                    default:
                        cout << "INCORRECT DATA";
                        break;
                }
            }
            
            launch();
            solutions.push_back(getAnswer());
        }
        
        for (int i = 0; i < 5; i++)
            cout << solutions[i].first << " " << solutions[i].second << endl;
    }
    
    void getTestData(int numOfTest)
    {
        for (int i = 0; i < 48; i++)
            inputLay[i] = testData[i][numOfTest];
        target = testTarget[numOfTest];
    }
    
    void getCheckData(int numOfCheck)
    {
        for (int i = 0; i < 48; i++)
            inputLay[i] = checkData[i][numOfCheck];
        target = checkTarget[numOfCheck];
    }
    
    vector<vector<double>> forward(vector<double> prevLay, vector<vector<double>> weights)
    {
        if (prevLay.size() == SIZES[0])
        {
            vector<double> curLay (SIZES[1], 0);
            
            for (int i = 0; i < SIZES[1]; i++)
                for (int j = 0; j < SIZES[0]; j++)
                    curLay[i] += prevLay[j] * weights[j][i];
            
            vector<vector<double>> answer;
            answer.resize(weights.size() + 2);
            answer[0] = curLay;
            answer[1] = prevLay;
            for (size_t i = 2; i < weights.size(); i++) //cache
                answer[i] = weights[i - 2];
            
            return answer;
        }
        else
        {
            vector<double> curLay (SIZES[2], 0);
            
            for (int i = 0; i < SIZES[2]; i++)
                for (int j = 0; j < SIZES[1]; j++)
                    curLay[i] += prevLay[j] * weights[j][i];
            
            vector<vector<double>> answer;
            answer.resize(weights.size() + 2);
            answer[0] = curLay;
            answer[1] = prevLay;
            for (size_t i = 2; i < weights.size(); i++) //cache
                answer[i] = weights[i - 2];
            
            return answer;
        }
    }
    
    //Activation
    void activate()
    {
        for (int i = 0; i < SIZES[1]; i++)
            hiddenActivateLay[i] = relu(hiddenLay[i]);
    }
    
    //softmax
    void softmax()
    {
        sum = 0.0;
        double MAX = -999;
        for (int i = 0; i < SIZES[2]; i++)
            if (MAX < outputLay[i])
                MAX = outputLay[i];
        
        for (int i = 0; i < SIZES[2]; i++)
            outputLay[i] -= MAX;
        
        for (int i = 0; i < SIZES[2]; i++)
            sum += exp(outputLay[i]);
        
        for (int i = 0; i < SIZES[2]; i++)
            softMaxLay[i] = exp(outputLay[i]) / sum;
        
        for (int i = 0; i < SIZES[2]; i++)
        {
            if (i == target)
                gradientOnSoftmaxLay[i] = -1 + exp(softMaxLay[i])/sum;
            else
                gradientOnSoftmaxLay[i] = exp(softMaxLay[i])/sum;
        }
    }
    
    pair<int, int> getAnswer()
    {
        double p = 0.0;
        pair<int, int> answer;
        int testAnswer = 0;
        
        for (int i = 0; i < 16; i++)
            if (softMaxLay[i] > p)
            {
                p = softMaxLay[i];
                answer.first = (i / 4) + 1;
                answer.second = (i % 4) + 1;
                testAnswer = i;
            }
        //cout << testAnswer << " " << target << endl;
        if (testAnswer == target)
            accuracy++;
        
        return answer;
    }
    
    //Launching the network
    void launch()
    {
        vector<vector<double>> firstForward = forward(inputLay, weightsInput);
        hiddenLay = firstForward[0];
        inputLayCache = firstForward[1];
        inputWeightsCache.resize(SIZES[0]);
        for (int i = 0; i < SIZES[0]; i++)
            inputWeightsCache.push_back(firstForward[i + 2]);
        
        activate();
        
        vector<vector<double>> secondForward = forward(hiddenActivateLay, weightsOutput);
        outputLay = secondForward[0];
        hiddenLayCache = secondForward[1];
        inputWeightsCache.resize(SIZES[1]);
        for (int i = 0; i < SIZES[1]; i++)
            inputWeightsCache.push_back(secondForward[i + 2]);
        
        softmax();
    }
    
    void countSumOfWeights()
    {
        sumOfWeights = 0.0;
        
        for (int i = 0; i < SIZES[0]; i++)
            for (int j = 0; j < SIZES[1]; j++)
                sumOfWeights += weightsInput[i][j] * weightsInput[i][j];
        
        for (int i = 0; i < SIZES[1]; i++)
            for (int j = 0; j < SIZES[2]; j++)
                sumOfWeights += weightsOutput[i][j] * weightsOutput[i][j];
    }
    
    void countLoss()
    {
        //Смотрим на лосс
        countSumOfWeights(); // регуляризация
        loss = -exp(softMaxLay[target]) + log(sum) + sumOfWeights;
        
        if (loss < bestLoss)
            bestLoss = loss;
    }
    
    //Gradient descent
    void changeWeights()
    {
        for (int i = 0; i < SIZES[1]; i++)
            for (int j = 0; j < SIZES[2]; j++)
                weightsOutput[i][j] += -1 * alpha * outputWeightsGradient[i][j];
        
        for (int i = 0; i < SIZES[0]; i++)
            for (int j = 0; j < SIZES[1]; j++)
                weightsInput[i][j] += -1 * alpha * inputWeightsGradient[i][j];
    }
    
    pair<vector<double>, vector<vector<double>>> backPropogation(vector<double> upperGradients, vector<double> cache, vector<vector<double>> weights, bool check)
    {
        pair<vector<double>, vector<vector<double>>> gradients;
        gradients.first.resize(cache.size());
        gradients.second.resize(weights.size());
        
        for (size_t i = 0; i < gradients.second.size(); i++)
            gradients.second[i].resize(weights[i].size());
        
        if (cache.size())
        {
            if (!check)
                for (size_t i = 0; i < gradients.first.size(); i++)
                    gradients.first[i] = upperGradients[i] * cache[i];
            else
            {
                for (size_t i = 0; i < gradients.first.size(); i++)
                {
                    double SUM = 0;
                    for (size_t j = 0; j < weightsOutput[i].size(); j++)
                        SUM += weightsOutput[i][j] * gradientOnOutputLay[j];
                    
                    gradients.first[i] = SUM;
                }
            }
        }
        
        if (weights.size())
            for (size_t i = 0; i < gradients.second.size(); i++)
                for (size_t j = 0; j < gradients.second[i].size(); j++)
                    gradients.second[i][j] = weights[i][j] * upperGradients[j];
        
        return gradients;
    }
    
    //Learning
    void study()
    {
        for (int age = 0; age < 50; age++)
        {
            for (int i = 0; i < 80000; i++)
            {
                init();
                getTestData(i);
                launch();
                countLoss();
                
                vector<vector<double>> q; //пустые вектора
                vector<double> w;
                
                gradientOnOutputLay = backPropogation(gradientOnSoftmaxLay, outputLay, q, false).first;
                outputWeightsGradient = backPropogation(gradientOnOutputLay, w, weightsOutput, false).second;
                gradientOnActivateLay = backPropogation(gradientOnOutputLay, hiddenActivateLay, q, true).first;
                gradientOnHiddenLay = backPropogation(gradientOnActivateLay, hiddenLayCache, q, false).first;
                inputWeightsGradient = backPropogation(gradientOnHiddenLay, w, weightsInput, false).second;
                
                changeWeights();
            }
            cout << bestLoss << " " << accuracy << endl;
            accuracy = 0;
            bestLoss = INFINITY;
        }
        
        for (int i = 0; i < 20000; i++)
        {
            init();
            getCheckData(i);
            
            launch();
            countLoss();
        }
        
        cout << "INPUT WEIGHTS: " << endl;
        for (int i = 0; i < 48; i++)
        {
            cout << "{";
            for (int j = 0; j < 95; j++)
                cout << weightsInput[i][j] << ",  ";
            cout << weightsInput[i][95];
            cout << "}, ";
        }
        
        cout << endl << "OUTPUT WEIGHTS: " << endl;
        for (int i = 0; i < 48; i++)
        {
            cout << "{";
            for (int j = 0; j < 15; j++)
                cout << weightsOutput[i][j] << ",  ";
            cout << weightsOutput[i][15];
            cout << "}, ";
        }
        
        cout << endl << endl;
        cout << "ACCURACY = " << accuracy;
    }
};

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    Network neural;
    neural.solve();
    
    return 0;
}
